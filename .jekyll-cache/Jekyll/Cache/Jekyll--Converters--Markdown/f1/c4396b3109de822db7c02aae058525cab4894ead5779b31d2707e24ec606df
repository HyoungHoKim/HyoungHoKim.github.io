I"<p>프로그래머스 코딩테스트 연습문제입니다. 지금까지 풀어온 문제 중에 가장 오래 걸린 것 같습니다. 테스트 케이스를 통과하는 것은 금방 해결했으나 효율성부분에서 도저히 못 풀겠어서 구글링을 통해 답을 확인했습니다. 구글링 답을 볼 때는 의아했지만 다른 사람들 풀이를 찬찬히 보니 아직 멀었다는 생각이듭니다. 꾸준히 풀어야겠습니다.</p>

<h3 id="문제-설명">문제 설명</h3>
<p>초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.</p>

<h3 id="제한사항">제한사항</h3>
<ul>
  <li>prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.</li>
  <li>prices의 길이는 2 이상 100,000 이하입니다.</li>
</ul>

<h3 id="풀이">풀이</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// 효율성 문제를 해결 못한 풀이
#include &lt;string&gt;
#include &lt;vector&gt;

using namespace std;

vector&lt;int&gt; solution(vector&lt;int&gt; prices) {
    vector&lt;int&gt; answer(prices.size(), 0);
    vector&lt;bool&gt; isMinus;

    for(int i = 0; i &lt; prices.size(); i++){

        isMinus.push_back(false);

        for(int j = 0; j &lt; i; j++){
            if(prices[j] &lt;= prices[i] &amp;&amp; isMinus[j] == false) answer[j]++;
            else{
                if(isMinus[j] == false) answer[j]++;
                isMinus[j] = true;
            }
        }
    }
    return answer;
}

// 구글링을 통한 풀이
#include &lt;string&gt;
#include &lt;vector&gt;

using namespace std;

vector&lt;int&gt; solution(vector&lt;int&gt; prices) {
    vector&lt;int&gt; answer;
    for (int i = 0; i &lt; prices.size(); i++) {
        int price = 0;
        for (int j = i + 1; j &lt; prices.size(); j++) {
            if (prices[j] &gt;= prices[i]) price++;
            else {
                price++;
                break;
            }
        }
        answer.push_back(price);
    }
    return answer;
}

// 스택을 이용한 풀이, 인덱스를 이용해서 푼 것이 놀라웠다.
#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;stack&gt;

using namespace std;

vector&lt;int&gt; solution(vector&lt;int&gt; prices) {
    vector&lt;int&gt; answer(prices.size());
    stack&lt;int&gt; s;
    int size = prices.size();
    for(int i=0;i&lt;size;i++){
        while(!s.empty()&amp;&amp;prices[s.top()]&gt;prices[i]){
            answer[s.top()] = i-s.top();
            s.pop();
        }
        s.push(i);
    }
    while(!s.empty()){
        answer[s.top()] = size-s.top()-1;
        s.pop();
    }
    return answer;
}
</code></pre></div></div>
:ET