I"J<p>프로그래머스 코딩테스트 연습문제입니다. 풀다보니 조금 길어졌던 문제입니다. 단순하게 생각하는 것이 중요한 것 같습니다. max 값을 이용하면 좀 더 코드를 간결하게 줄일 수 있습니다.</p>

<h3 id="문제-설명">문제 설명</h3>
<p>수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.</p>

<p>1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …
2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, …
3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, …</p>

<p>1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>

<h3 id="제한-조건">제한 조건</h3>
<ul>
  <li>시험은 최대 10,000 문제로 구성되어있습니다.</li>
  <li>문제의 정답은 1, 2, 3, 4, 5중 하나입니다.</li>
  <li>가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.</li>
</ul>

<h3 id="풀이">풀이</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include &lt;string&gt;
#include &lt;vector&gt;

using namespace std;

int getScore(vector&lt;int&gt; answers, vector&lt;int&gt; ref){

    int score = 0;

    for(int i = 0; i &lt; answers.size(); i++){

        if(answers[i] == ref[i%ref.size()]) score++;
    }

    return score;
}

vector&lt;int&gt; solution(vector&lt;int&gt; answers) {
    vector&lt;int&gt; answer;
    vector&lt;int&gt; case1 = {1, 2, 3, 4, 5};
    vector&lt;int&gt; case2 = {2, 1, 2, 3, 2, 4, 2, 5};
    vector&lt;int&gt; case3 = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};

    int score1 = getScore(answers, case1);
    int score2 = getScore(answers, case2);
    int score3 = getScore(answers, case3);
    int max;

    if(score1 &gt;= score2){
        if(score1 &gt;= score3){
            answer.push_back(1);
            if(score1 == score2) answer.push_back(2);
            if(score1 == score3) answer.push_back(3);
        }
        else answer.push_back(3);
    }else{
        if(score2 &gt;= score3){
            answer.push_back(2);
            if(score1 == score2) answer.push_back(1);
            if(score2 == score3) answer.push_back(3);
        }
        else answer.push_back(3);
    }

    /* max를 이용한 값 비교
    int they_max = *max_element(they.begin(),they.end());
    for(int i = 0; i&lt; 3; i++) {
        if(they[i] == they_max) answer.push_back(i+1);
    }
    */

    return answer;
}
</code></pre></div></div>
:ET